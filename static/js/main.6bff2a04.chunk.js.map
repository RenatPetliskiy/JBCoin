{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["coins","Home","state","text","onClickButton1","setState","id","this","size","level","onClick","React","Component","ReactDOM","render","document","getElementById","osName","platform","Persik","props","left","go","data-to","IOS","App","useState","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to"],"mappings":"sYAQIA,EAAQ,EAENC,E,4MACFC,MAAQ,CACNC,KAAK,GAAD,OAAKH,I,EAIbI,eAAiB,WACfJ,GAAS,EACT,EAAKK,SAAS,CACZF,KAAK,GAAD,OAAKH,M,uDAIX,OACI,kBAAC,IAAD,CAAOM,GAAG,UACR,kBAAC,IAAD,6CACA,kBAAC,IAAD,KACL,kBAAC,IAAD,KACEC,KAAKL,MAAMC,MAEN,kBAAC,IAAD,CAAQK,KAAK,KAAKC,MAAM,IAAIC,QAASH,KAAKH,gBAA1C,kC,GApBOO,IAAMC,WA8BzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SAEXf,Q,2DCjCTgB,EAASC,cAyBAC,EAvBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IAChB,kBAAC,IAAD,CACCe,KAAM,kBAAC,IAAD,CAAmBX,QAASU,EAAME,GAAIC,UAAQ,QAClDN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,+CAOA,kBAAC,IAAD,KACC,kBAAC,IAAD,0ECmBYC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,kBAAC,IAAD,CAAelB,KAAK,WAHxC,mBAGVuB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkB3B,SAAS4B,gBAAgB,UACjDD,EAAgBE,MAAQH,EAAKI,OAASJ,EAAKI,OAAS,eACpD9B,SAAS+B,KAAKC,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAEH,IAAM3B,EAAK,SAAA4B,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMzB,GAAG,OAAOuB,YAAaA,EAAaP,GAAIA,IAC9C,kBAAC,EAAD,CAAQhB,GAAG,SAASgB,GAAIA,MC/B3Ba,IAAOC,KAAK,gBAEZvB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6bff2a04.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n\nvar coins = 0;\n\nclass Home extends React.Component {\n    state = {\n      text: `${coins}`\n    }\n\n\n  onClickButton1 = () => {\n    coins += 1;\n    this.setState({\n      text: `${coins}`\n    });\n  }\n  render() {\n    return (\n        <Panel id=\"panel1\">\n          <PanelHeader>БАЛАНС</PanelHeader>\n          <Group>\n\t    <Cell>\n\t     {this.state.text}\n\t    </Cell>\n            <Button size=\"xl\" level=\"1\" onClick={this.onClickButton1}>\n\t      Клик\n            </Button>\n          </Group>\n        </Panel>\n    )\n  }\n}\n\n\nReactDOM.render(\n  <Home />,\n  document.getElementById('Home')\n);\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tУспешно!\n\t\t</PanelHeader>\n\t\t<Group>\n\t\t\t<Cell>\n\t\t\tВы кликнули!\n\t\t\t</Cell>\n\t\t</Group>\n\t</Panel>\n);\n\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}